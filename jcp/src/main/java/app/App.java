/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package app;

import com.fasterxml.jackson.databind.ObjectMapper;

import java.io.*;
import java.net.InetAddress;
import java.net.Socket;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Optional;
import javax.swing.*;
import javax.swing.filechooser.*;

public class App {
    //jcp main
    public static void main(String[] args) {
		String request = null;
		if (args.length >= 1) {
			request = args[0];
		}
		String filename = null;
		if (args.length >= 2) {
			filename = args[1];
		}
		
		if (args[0].equals("help") {
			System.out.println("Use the commands upload or download followed by the filename to upload or download a file.");
		}
		
        int test  = 0;


        System.out.println(NetworkUtils.timeStamp(1) + "JCP online");
        //make a discoverymanager and start it, prints results to file
        DiscoveryManager DM = new DiscoveryManager(Module.JCP);
        DM.start();

        //get the stalkers from file
        HashMap<Integer, String> m =  NetworkUtils.mapFromJson(NetworkUtils.fileToString("config/stalkers.list"));
        //get sorted list from targets
        List<Integer> s_list = NetworkUtils.mapToSList(m);

        System.out.println(" Ip ids" + (s_list));
//        if (test == 0){
//            return;
//        }
        for (Integer key : m.keySet()){

        }
        RequestSender requestSender = RequestSender.getInstance();
        //ip of stalker we'll just use the one at index 0 for now
        String i =  m.get(s_list.get(0));
        System.out.println(" dwdwdwdwddwwd" + i.toString());
        String stalkerip =  m.get(s_list.get(1));

        //port to connect to
        int port = 11111;
        Socket socket = requestSender.connect(stalkerip, port);
        //String req = "upload";
		String req = request;
		String file = filename;
        switch (req){
            case("upload"):
                //requestSender.sendFile("temp\\003_txt_test.txt");
				JFileChooser jfc = new JFileChooser(FileSystemView.getFileSystemView().getHomeDirectory());
				int returnValue = jfc.showOpenDialog(null);
				if (returnValue == JFileChooser.APPROVE_OPTION) {
					File selectedFile = jfc.getSelectedFile();
					requestSender.sendFile(selectedFile.getAbsolutePath());
				}
				//requestSender.sendFile(file);
                break;
            case("download"):
                //requestSender.getFile("temp\\003_txt_test.txt");
				requestSender.getFile(file);
                break;
        }
        // should close socket from main calling method, otherwise threads giving null pointer exception
        try {
            socket.close();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }


//
//    //load a config (stalker ip) from file while we get network discovery working

}
